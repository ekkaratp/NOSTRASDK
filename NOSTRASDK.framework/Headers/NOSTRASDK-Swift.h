// Generated by Apple Swift version 4.1.2 (swiftlang-902.0.54 clang-902.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NOSTRASDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// A converter class that provide for geographic transformation.
SWIFT_CLASS("_TtC9NOSTRASDK19CoordinateConverter")
@interface CoordinateConverter : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




/// An NTActivity class represent activity information of place.
SWIFT_CLASS("_TtC9NOSTRASDK10NTActivity")
@interface NTActivity : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A base class of parameter.
SWIFT_CLASS("_TtC9NOSTRASDK11NTParameter")
@interface NTParameter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Instances of this class represent parameters for NTAddressSearchService. Parameters specify the criteria for performing an address of location. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAddressSearchService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTAddressSearchParameter")
@interface NTAddressSearchParameter : NTParameter
/// Initializes an NTAddressSearchParameter object that’s initiated to search by using attributes.
///
/// returns:
/// A New NTAddressSearchParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A base class of resultp
SWIFT_CLASS("_TtC9NOSTRASDK8NTResult")
@interface NTResult : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A result of address.
SWIFT_CLASS("_TtC9NOSTRASDK21NTAddressSearchResult")
@interface NTAddressSearchResult : NTResult
@end


/// A set of result return from NTAddressSearchService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTAddressSearchResultSet")
@interface NTAddressSearchResultSet : NTResult
@end


/// A base class of service.
SWIFT_CLASS("_TtC9NOSTRASDK9NTService")
@interface NTService : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This service allows you to search for address in Thailand by house number. You can query specified area by sending full-text address including many attributes such as house number, soi, road, sub-district, district, province and postcode in one parameter as a search key word. For better search results, each attribute should be separated with a space character and be defined which attributes are soi, road, sub-district, district or province by adding the administrative prefix such as soi, rd., tambol (ต.), amphur (อ.) or provice (จ.).
SWIFT_CLASS("_TtC9NOSTRASDK22NTAddressSearchService")
@interface NTAddressSearchService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A result of administrative.
SWIFT_CLASS("_TtC9NOSTRASDK16NTAdministrative")
@interface NTAdministrative : NTResult
@end


/// Instances of this class represent parameters for NTAdministrativeService. Parameters specify the criteria for performing a result of administrative information. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAdministrativeService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTAdministrativeParameter")
@interface NTAdministrativeParameter : NTParameter
/// Initializes an NTAdministrativeParameter object.
///
/// returns:
/// A New NTAdministrativeParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A set of result returns form NTAdministrativeService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTAdministrativeResultSet")
@interface NTAdministrativeResultSet : NTResult
@end


/// This service is the administrative boundary (Sub District, District, and Province) inquiry service by receiving Ministry of Interior certified administrative boundary code and returning back results to user.
SWIFT_CLASS("_TtC9NOSTRASDK23NTAdministrativeService")
@interface NTAdministrativeService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTAgsBarrier class.
SWIFT_CLASS("_TtC9NOSTRASDK12NTAgsBarrier")
@interface NTAgsBarrier : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Instances of this class represent parameters for NTClosestFacilitySerivce. Parameters specify the criteria for performing a result of the clostest facility. Parameters are passed as an argument to execute: or executeAsync:Completion on NTClosestFacilitySerivce.
SWIFT_CLASS("_TtC9NOSTRASDK26NTClosestFacilityParameter")
@interface NTClosestFacilityParameter : NTParameter
/// Initializes an NTClosestFacilityParameter object.
///
/// returns:
/// A New NTClosestFacilityParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Instances of this class represent parameters for NTAGSClosestFacilityService. Parameters specify the criteria for performing a result of the closest facility. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAGSClosestFacilityService.
SWIFT_CLASS("_TtC9NOSTRASDK29NTAgsClosestFacilityParameter")
@interface NTAgsClosestFacilityParameter : NTClosestFacilityParameter
/// Initializes an NTAGSClosestFacilityParameter object.
///
/// returns:
/// A New NTAGSClosestFacilityParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A result of NTAGSClosestFacilityService
SWIFT_CLASS("_TtC9NOSTRASDK26NTAgsClosestFacilityResult")
@interface NTAgsClosestFacilityResult : NTResult
@end


/// This service allows you to find closest facilities around any location (incident) on road network by specify how many to find and whether the direction of travel is toward or away from them. For examples of closest facility problems, finding the closest hospital to an accident, the closest police cars to a crime scene, and the closest store to a customer’s address. Once you’ve found the closest facilities, you can display the best route to or from them, return the travel cost for each route, and display directions to each facility. In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
/// The result of service is in ArcGIS form.
SWIFT_CLASS("_TtC9NOSTRASDK27NTAgsClosestFacilityService")
@interface NTAgsClosestFacilityService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTAGSDirection object.
SWIFT_CLASS("_TtC9NOSTRASDK14NTAgsDirection")
@interface NTAgsDirection : NTResult
@end


/// A NTAGSDirectionFeature object.
SWIFT_CLASS("_TtC9NOSTRASDK21NTAgsDirectionFeature")
@interface NTAgsDirectionFeature : NTResult
@end


/// A NTAGSFacility object.
SWIFT_CLASS("_TtC9NOSTRASDK13NTAgsFacility")
@interface NTAgsFacility : NTResult
@end


/// A NTFacilityFeature object.
SWIFT_CLASS("_TtC9NOSTRASDK20NTAgsFacilityFeature")
@interface NTAgsFacilityFeature : NTResult
@end


/// A NTAgsError class describes about error of Network service.
SWIFT_CLASS("_TtC9NOSTRASDK12NTAgsNAError")
@interface NTAgsNAError : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A NTAgsNAMessage class describes about code and message from network service.
SWIFT_CLASS("_TtC9NOSTRASDK14NTAgsNAMessage")
@interface NTAgsNAMessage : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A NTAGSRoute object.
SWIFT_CLASS("_TtC9NOSTRASDK10NTAgsRoute")
@interface NTAgsRoute : NTResult
@end


/// A NTAGSRouteFeature object.
SWIFT_CLASS("_TtC9NOSTRASDK17NTAgsRouteFeature")
@interface NTAgsRouteFeature : NTResult
@end


/// A NTAGSRouteGeometry object.
SWIFT_CLASS("_TtC9NOSTRASDK18NTAgsRouteGeometry")
@interface NTAgsRouteGeometry : NTResult
@end


/// Instances of this class represent parameters for NTRouteService. Parameters specify the criteria for performing a result of route. Parameters are passed as an argument to execute: or executeAsync:Completion on NTRouteService.
SWIFT_CLASS("_TtC9NOSTRASDK16NTRouteParameter")
@interface NTRouteParameter : NTParameter
/// Initializes an NTRouteParameter object.
///
/// returns:
/// A New NTRouteParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Instances of this class represent parameters for NTAGSRouteService. Parameters specify the criteria for performing a result of route. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAGSRouteService.
SWIFT_CLASS("_TtC9NOSTRASDK19NTAgsRouteParameter")
@interface NTAgsRouteParameter : NTRouteParameter
/// Initializes an NTAGSRouteParameter object.
///
/// returns:
/// A New NTAGSRouteParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A result of ArcGIS Route.
SWIFT_CLASS("_TtC9NOSTRASDK16NTAgsRouteResult")
@interface NTAgsRouteResult : NTResult
@end


/// The service allows you to find the best route to get from one location to another or the best way to visit several locations by car, truck, motorcycle, bicycle, or pedestrian. The locations can be specified by using coordinate of points. The best route can be determined for the order of locations as specified by the users. Along with the best route, service provides directions with turn-by-turn text guidance, travel time, and total distance.
/// In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
/// <ul>
///   <li>
///     The result of service is in ArcGIS form.
///   </li>
/// </ul>
SWIFT_CLASS("_TtC9NOSTRASDK17NTAgsRouteService")
@interface NTAgsRouteService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTAGSRouteSummary object.
SWIFT_CLASS("_TtC9NOSTRASDK17NTAgsRouteSummary")
@interface NTAgsRouteSummary : NTResult
@end


/// A NTAGSServiceAreaPolygons object.
SWIFT_CLASS("_TtC9NOSTRASDK16NTAgsServiceArea")
@interface NTAgsServiceArea : NTResult
@end


/// A NTAGSServiceAreaFeature class
SWIFT_CLASS("_TtC9NOSTRASDK23NTAgsServiceAreaFeature")
@interface NTAgsServiceAreaFeature : NTResult
@end


/// Instances of this class represent parameters for NTServiceAreaService. Parameters specify the criteria for performing a result of service area. Parameters are passed as an argument to execute: or executeAsync:Completion on NTServiceAreaService.
SWIFT_CLASS("_TtC9NOSTRASDK22NTServiceAreaParameter")
@interface NTServiceAreaParameter : NTParameter
/// Initializes an NTServiceAreaParameter object.
///
/// returns:
/// A New NTServiceAreaParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Instances of this class represent parameters for NTAGSServiceArea. Parameters specify the criteria for performing a result of service area. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAGSServiceArea.
SWIFT_CLASS("_TtC9NOSTRASDK25NTAgsServiceAreaParameter")
@interface NTAgsServiceAreaParameter : NTServiceAreaParameter
/// Initializes an NTAGSServiceAreaParameter object.
///
/// returns:
/// A New NTAGSServiceAreaParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTAgsServiceAreaResult class.
SWIFT_CLASS("_TtC9NOSTRASDK22NTAgsServiceAreaResult")
@interface NTAgsServiceAreaResult : NTResult
@end


/// This service allows you to find service areas around any location on a road network. For instance, the 30-minute service area for a facility includes all the streets that can be reached within 30 minutes from that facility. These areas are generally used to visualize and measure the ability of facility for serving users or customers. Once service areas are created, you can apply them for identifying how many areas, how many people, or how much of anything else is within that area.
/// In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
/// The result of service is in ArcGIS form.
SWIFT_CLASS("_TtC9NOSTRASDK23NTAgsServiceAreaService")
@interface NTAgsServiceAreaService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTAGSStop object.
SWIFT_CLASS("_TtC9NOSTRASDK9NTAgsStop")
@interface NTAgsStop : NTResult
@end


/// A NTAgsStopFeature object.
SWIFT_CLASS("_TtC9NOSTRASDK16NTAgsStopFeature")
@interface NTAgsStopFeature : NTResult
@end


/// A NTAttraction class provide to represent attraction information in local language and english language.
SWIFT_CLASS("_TtC9NOSTRASDK12NTAttraction")
@interface NTAttraction : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Instances of this class represent parameters for NTAutocompleteService. Parameters specify the criteria for performing a keyword matching. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAutocompleteService.
SWIFT_CLASS("_TtC9NOSTRASDK23NTAutocompleteParameter")
@interface NTAutocompleteParameter : NTParameter
@end


/// A set of result returns from NTAutocompleteService.
SWIFT_CLASS("_TtC9NOSTRASDK23NTAutocompleteResultSet")
@interface NTAutocompleteResultSet : NTResult
@end


/// This service allows you to let your applications suggest keywords for users to search for places. You can apply this service to create keyword suggestion feature in location search function for better user experience. All AEC countries are supported.
SWIFT_CLASS("_TtC9NOSTRASDK21NTAutocompleteService")
@interface NTAutocompleteService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// An NTBranch class, It’s provided for represented a branch information of the place.
SWIFT_CLASS("_TtC9NOSTRASDK8NTBranch")
@interface NTBranch : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A result of category
SWIFT_CLASS("_TtC9NOSTRASDK10NTCategory")
@interface NTCategory : NTResult
@end


/// A set of result returns from NTCategoryService.
SWIFT_CLASS("_TtC9NOSTRASDK19NTCategoryResultSet")
@interface NTCategoryResultSet : NTResult
@end


/// This service is the POI categories inquiry service by receiving a request, then service will return the list of all POI categories to user for using with other NOSTRA services such as Location search
SWIFT_CLASS("_TtC9NOSTRASDK17NTCategoryService")
@interface NTCategoryService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of route returns from NTRouteService.
SWIFT_CLASS("_TtC9NOSTRASDK13NTRouteResult")
@interface NTRouteResult : NTResult
@end


/// A result of closest facility.
SWIFT_CLASS("_TtC9NOSTRASDK23NTClosestFacilityResult")
@interface NTClosestFacilityResult : NTRouteResult
@end


/// A result of closest facility return from NTClosestFacilityService.
SWIFT_CLASS("_TtC9NOSTRASDK26NTClosestFacilityResultSet")
@interface NTClosestFacilityResultSet : NTResult
@end


/// This service allows you to find closest facilities around any location (incident) on road network by specify how many to find and whether the direction of travel is toward or away from them. For examples of closest facility problems, finding the closest hospital to an accident, the closest police cars to a crime scene, and the closest store to a customer’s address. Once you’ve found the closest facilities, you can display the best route to or from them, return the travel cost for each route, and display directions to each facility. In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
SWIFT_CLASS("_TtC9NOSTRASDK24NTClosestFacilityService")
@interface NTClosestFacilityService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTContentEffect class describes about radius and color of effect.
SWIFT_CLASS("_TtC9NOSTRASDK15NTContentEffect")
@interface NTContentEffect : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A NTContentInfo class describes about information of place.
SWIFT_CLASS("_TtC9NOSTRASDK13NTContentInfo")
@interface NTContentInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A NTContentSource class.
SWIFT_CLASS("_TtC9NOSTRASDK15NTContentSource")
@interface NTContentSource : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

/// The AEC country that’s provided by NOSTRA
/// <ul>
///   <li>
///     unknown: 0
///   </li>
///   <li>
///     brunei: 673
///   </li>
///   <li>
///     cambodia: 855
///   </li>
///   <li>
///     indonesia: 62
///   </li>
///   <li>
///     laos: 856
///   </li>
///   <li>
///     malaysia: 60
///   </li>
///   <li>
///     myamar: 95
///   </li>
///   <li>
///     singapore: 65
///   </li>
///   <li>
///     thailand: 66
///   </li>
///   <li>
///     vietnam: 84
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, NTCountry_c) {
/// Unknown.
  NTCountry_cUnknown = 0,
/// Brunei.
  NTCountry_cBrunei = 673,
/// Cambodia.
  NTCountry_cCambodia = 855,
/// Indonesia.
  NTCountry_cIndonesia = 62,
/// Laos.
  NTCountry_cLaos = 856,
/// Malaysia.
  NTCountry_cMalaysia = 60,
/// Myamar.
  NTCountry_cMyamar = 95,
/// Singapore.
  NTCountry_cSingapore = 65,
/// Thailand.
  NTCountry_cThailand = 66,
/// Vietnam.
  NTCountry_cVietnam = 84,
};


/// A describe stops.
SWIFT_CLASS("_TtC9NOSTRASDK11NTDirection")
@interface NTDirection : NTResult
@end


/// A result of NTDynamicContentListService.
SWIFT_CLASS("_TtC9NOSTRASDK26NTDynamicContentListResult")
@interface NTDynamicContentListResult : NTResult
@end


/// A set of result that’s returned from NTDynamicContentListService.
SWIFT_CLASS("_TtC9NOSTRASDK29NTDynamicContentListResultSet")
@interface NTDynamicContentListResultSet : NTResult
@end


/// This service provides list of dynamic content limit by user authorization level, each dynamic content has a layer ID to request for its information.
SWIFT_CLASS("_TtC9NOSTRASDK27NTDynamicContentListService")
@interface NTDynamicContentListService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Instances of this class represent parameters for NTDynamicContentService. Parameters specify the criteria for performing a dynamic content. Parameters are passed as an argument to execute: or executeAsync:Completion on NTDynamicContentService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTDynamicContentParameter")
@interface NTDynamicContentParameter : NTParameter
@end


/// A result of NTDynamicContentService.
SWIFT_CLASS("_TtC9NOSTRASDK22NTDynamicContentResult")
@interface NTDynamicContentResult : NTResult
@end


/// A result that’s returned from NTDynamicContentService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTDynamicContentResultSet")
@interface NTDynamicContentResultSet : NTResult
@end


/// Request for all information of point of interest in the layer ID parameter. You can identify more parameter for specification results, for example latitude, longitude and radius.
SWIFT_CLASS("_TtC9NOSTRASDK23NTDynamicContentService")
@interface NTDynamicContentService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTEntertainmentService class represents service information.
SWIFT_CLASS("_TtC9NOSTRASDK22NTEntertainmentService")
@interface NTEntertainmentService : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class NTSpatialReference;

/// An envelope object.
SWIFT_CLASS("_TtC9NOSTRASDK10NTEnvelope")
@interface NTEnvelope : NTResult
/// A spatial reference of envelope
@property (nonatomic, readonly, strong) NTSpatialReference * _Nullable spatialReference;
@property (nonatomic, readonly) double xmax_c;
@property (nonatomic, readonly) double xmin_c;
@property (nonatomic, readonly) double ymax_c;
@property (nonatomic, readonly) double ymin_c;
@end


/// An NTExtraContent class represents basis of extra content.
SWIFT_CLASS("_TtC9NOSTRASDK14NTExtraContent")
@interface NTExtraContent : NTResult
@end


/// A food result of NTExtraContentService
SWIFT_CLASS("_TtC9NOSTRASDK18NTExtraContentFood")
@interface NTExtraContentFood : NTExtraContent
@end


/// /// A hotel result of NTExtraContentService
SWIFT_CLASS("_TtC9NOSTRASDK19NTExtraContentHotel")
@interface NTExtraContentHotel : NTExtraContent
@end


/// Instances of this class represent parameters for NTExtraContentService. Parameters specify the criteria for performing an extra content of POI. Parameters are passed as an argument to execute: or executeAsync:Completion on NTExtraContentService.
SWIFT_CLASS("_TtC9NOSTRASDK23NTExtraContentParameter")
@interface NTExtraContentParameter : NTParameter
/// Initializes an NTExtraContentParameter object.
///
/// returns:
/// A New NTExtraContentParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A result of NTExtraContentService
SWIFT_CLASS("_TtC9NOSTRASDK20NTExtraContentResult")
@interface NTExtraContentResult : NTResult
@end


/// Additional information about specified location such as open-close time, telephone number, email, etc. The information is maybe difference due to the type of extra content.
SWIFT_CLASS("_TtC9NOSTRASDK21NTExtraContentService")
@interface NTExtraContentService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A travel result of NTExtraContentService.
SWIFT_CLASS("_TtC9NOSTRASDK20NTExtraContentTravel")
@interface NTExtraContentTravel : NTExtraContent
@end


/// A NTFoodType class, It describes about food description of a place.
SWIFT_CLASS("_TtC9NOSTRASDK10NTFoodType")
@interface NTFoodType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Instances of this class represent parameters for NTFuelService. Parameters specify the criteria for performing a result of fuel prices. Parameters are passed as an argument to execute: or executeAsync:Completion on NTFuelService.
SWIFT_CLASS("_TtC9NOSTRASDK15NTFuelParameter")
@interface NTFuelParameter : NTParameter
@end


/// A result of fuel prices.
SWIFT_CLASS("_TtC9NOSTRASDK12NTFuelResult")
@interface NTFuelResult : NTResult
@end


/// A set of result returns from NTFuelService.
SWIFT_CLASS("_TtC9NOSTRASDK15NTFuelResultSet")
@interface NTFuelResultSet : NTResult
@end


/// This service is the fuel price inquiry service by receiving Ministry of Interior certified administrative boundary code or coordinate, then service will return the details of fuel price of each brand to user.This service is available in Thailand only.
SWIFT_CLASS("_TtC9NOSTRASDK13NTFuelService")
@interface NTFuelService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Types of graphic
/// <ul>
///   <li>
///     point: 1
///   </li>
///   <li>
///     polyline: 2
///   </li>
///   <li>
///     polygon: 3
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, NTGraphicType_c) {
  NTGraphicType_cPoint = 1,
  NTGraphicType_cPolyline = 2,
  NTGraphicType_cPolygon = 3,
};


/// Instances of this class represent parameters for NTIdentifyService. Parameters specify the criteria  according to which country should be identified in the map. Parameters are passed as an argument to execute: or executeAsync:Completion on NTIdentifyService.
SWIFT_CLASS("_TtC9NOSTRASDK26NTIdentifyCountryParameter")
@interface NTIdentifyCountryParameter : NTParameter
@end


/// A result of country returns from NTIdentifyCountryService.
SWIFT_CLASS("_TtC9NOSTRASDK23NTIdentifyCountryResult")
@interface NTIdentifyCountryResult : NTResult
@end


/// This service can help you to get country code by latitude and longitude.
SWIFT_CLASS("_TtC9NOSTRASDK24NTIdentifyCountryService")
@interface NTIdentifyCountryService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Instances of this class represent parameters for NTIdentifyService. Parameters specify the criteria  according to which place should be identified in the map. Parameters are passed as an argument to execute: or executeAsync:Completion on NTIdentifyService.
SWIFT_CLASS("_TtC9NOSTRASDK19NTIdentifyParameter")
@interface NTIdentifyParameter : NTParameter
@end


/// A NTPOI object.
SWIFT_CLASS("_TtC9NOSTRASDK5NTPoi")
@interface NTPoi : NTResult
@end


/// A result of POI returns from NTIndentifyService.
SWIFT_CLASS("_TtC9NOSTRASDK16NTIdentifyResult")
@interface NTIdentifyResult : NTPoi
@end


/// This service is the process of converting geographic coordinates into an address. One coordinate of latitude and longitude is processed at a time and returned nearest landmark information. In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
SWIFT_CLASS("_TtC9NOSTRASDK17NTIdentifyService")
@interface NTIdentifyService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// An NTJS100ContentParameter class.
SWIFT_CLASS("_TtC9NOSTRASDK23NTJS100ContentParameter")
@interface NTJS100ContentParameter : NTDynamicContentParameter
@end


/// A NTJS100ContentResult object.
SWIFT_CLASS("_TtC9NOSTRASDK20NTJS100ContentResult")
@interface NTJS100ContentResult : NTDynamicContentResult
@end


/// A NTJS100ContentResultSet class.
SWIFT_CLASS("_TtC9NOSTRASDK23NTJS100ContentResultSet")
@interface NTJS100ContentResultSet : NTResult
@end


/// Request for JS100 information of point. You can identify more parameter for specification results, for example latitude, longitude and radius.
SWIFT_CLASS("_TtC9NOSTRASDK21NTJS100ContentService")
@interface NTJS100ContentService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A result of local category.
SWIFT_CLASS("_TtC9NOSTRASDK15NTLocalCategory")
@interface NTLocalCategory : NTResult
@end


/// Instances of this class represent parameters for NTLocalCategoryService. Parameters specify the criteria for performing a weather. Parameters are passed as an argument to execute: or executeAsync:Completion on NTWeatherService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTLocalCategoryParameter")
@interface NTLocalCategoryParameter : NTParameter
@end


/// A set of result returns form NTLocalCategoryService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTLocalCategoryResultSet")
@interface NTLocalCategoryResultSet : NTResult
@end


/// This service is the POI local categories inquiry service by receiving a request, then service will return the list of all POI local categories to user for using with other NOSTRA services such as Location search
SWIFT_CLASS("_TtC9NOSTRASDK22NTLocalCategoryService")
@interface NTLocalCategoryService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Instances of this class represent parameters for NTRouteParameter, NTClosestFacilityParameter, NTServiceAreaParameter, NTRouteParameter, NTClosestFacilityParameter, NTServiceAreaParameter and NTLocation.
SWIFT_CLASS("_TtC9NOSTRASDK10NTLocation")
@interface NTLocation : NTParameter
@end


/// Instances of this class represent parameters for NTLocationSearchService. Parameters specify the criteria for performing a searching location. Parameters are passed as an argument to execute: or executeAsync:Completion on NTLocationSearchService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTLocationSearchParameter")
@interface NTLocationSearchParameter : NTParameter
@end


/// A result of location returns from NTLocationSearchService.
SWIFT_CLASS("_TtC9NOSTRASDK22NTLocationSearchResult")
@interface NTLocationSearchResult : NTPoi
@end


/// A set of result returns from NTLocationSearchService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTLocationSearchResultSet")
@interface NTLocationSearchResultSet : NTResult
@end


/// This service allows you to search place information in Thailand, also AEC countries. You can query specified area by sending parameters, category or admin level.
SWIFT_CLASS("_TtC9NOSTRASDK23NTLocationSearchService")
@interface NTLocationSearchService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// A type of layers.
/// <ul>
///   <li>
///     unknown: 0
///   </li>
///   <li>
///     basemap: 1
///   </li>
///   <li>
///     imagery: 2
///   </li>
///   <li>
///     specialLayer: 3
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, NTMapLayerType_c) {
/// Unknown.
  NTMapLayerType_cUnknown = 0,
/// Basemap.
  NTMapLayerType_cBasemap = 1,
/// Imagery.
  NTMapLayerType_cImagery = 2,
/// Special layer.
  NTMapLayerType_cSpecialLayer = 3,
};

@class NTMapServiceInfo;
enum NTMapServiceType_c : NSInteger;
@class NTPoint;

/// A result of map permission returns from NTMapPermissionService.
SWIFT_CLASS("_TtC9NOSTRASDK21NTMapPermissionResult")
@interface NTMapPermissionResult : NTResult
@property (nonatomic, readonly) enum NTCountry_c country_c;
/// Service Name.
@property (nonatomic, readonly, copy) NSString * _Nullable name;
/// Service ID.
@property (nonatomic, readonly) NSInteger serviceId;
/// Sort index number.
@property (nonatomic, readonly) NSInteger sortedIndex;
/// Default level of service to zoom in.
@property (nonatomic, readonly) NSInteger defaultLevel;
/// Default minimum level of service.
@property (nonatomic, readonly) NSInteger minLevel;
/// Default maximum level of service.
@property (nonatomic, readonly) NSInteger maxLevel;
/// A local information of a service.
@property (nonatomic, readonly, strong) NTMapServiceInfo * _Nullable localService;
/// An english information of a service.
@property (nonatomic, readonly, strong) NTMapServiceInfo * _Nullable englishService;
@property (nonatomic, readonly) enum NTMapLayerType_c layerType_c;
@property (nonatomic, readonly) enum NTMapServiceType_c mapServiceType_c;
@property (nonatomic, readonly) enum NTGraphicType_c graphicType_c;
/// Array that contains service IDs if the map service should be use other service in this lists, null if not.
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull dependMap;
/// Default zoom point of service that contain latitude and longitude.
@property (nonatomic, readonly, strong) NTPoint * _Nullable defaultLocation;
/// Default envelope of service that contain x-min, y-min, x-max and y-max
@property (nonatomic, readonly, strong) NTEnvelope * _Nullable envelope;
@end


/// A set of map permission result return from NTMapPermissionService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTMapPermissionResultSet")
@interface NTMapPermissionResultSet : NTResult
/// A set of result
@property (nonatomic, readonly, copy) NSArray<NTMapPermissionResult *> * _Nullable results;
/// The method uses to find result from set of map permission by using service id.
/// \param serviceId Id of service
///
///
/// returns:
/// An object of NTMapPermissionResult (It may be nil if service id does not existed.)
- (NTMapPermissionResult * _Nullable)mapPermissionWithServiceId:(NSInteger)serviceId SWIFT_WARN_UNUSED_RESULT;
@end


/// This is a core service for map of NOSTRA. You can request to this service after received NOSTRA’s key and it will return the list of services that you have permission.
SWIFT_CLASS("_TtC9NOSTRASDK22NTMapPermissionService")
@interface NTMapPermissionService : NTService
/// Execute map permission service. It relies on map permission service of the web service API.
/// The result returns only one of POI matching specificed criteria.
///
/// throws:
/// Information about the error returned by the service.
///
/// returns:
/// A set of map services.
+ (NTMapPermissionResultSet * _Nullable)executeAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Execute map permission service. It relies on map permission service of the web service API.
/// \param Completion Block call when the map permission service has completely loaded.
/// The method also be called when the map permission service has error.
/// This block has a map permission result and an information about the error returned by the service.
///
+ (void)executeAsync:(void (^ _Nonnull)(NTMapPermissionResultSet * _Nullable, NSError * _Nullable))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// An NTMapServiceInfo Class.
SWIFT_CLASS("_TtC9NOSTRASDK16NTMapServiceInfo")
@interface NTMapServiceInfo : NSObject
/// An url of map service that provides to initiate the layer.
@property (nonatomic, copy) NSURL * _Nullable url;
/// A token of map service that uses to authenticate the map service.
@property (nonatomic, copy) NSString * _Nullable token;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

/// A type of map service.
/// <ul>
///   <li>
///     unknown
///   </li>
///   <li>
///     tiledMapService: Tiled map service
///   </li>
///   <li>
///     dynamicMapService: Dynamic map service
///   </li>
///   <li>
///     featureService: Feature server service
///   </li>
///   <li>
///     webMapService: Web map service
///   </li>
///   <li>
///     openSteetMap: Open stree map service
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, NTMapServiceType_c) {
/// Unknown.
  NTMapServiceType_cUnknown = 0,
/// Tiled map service.
  NTMapServiceType_cTiledMapService = 1,
/// Dynamic map service.
  NTMapServiceType_cDynamicMapService = 2,
/// Feature server service.
  NTMapServiceType_cFeatureService = 3,
/// Web map service
  NTMapServiceType_cWebMapService = 4,
/// Open stree map service
  NTMapServiceType_cOpenSteetMap = 5,
};


/// A NTMultiModalDirection object.
SWIFT_CLASS("_TtC9NOSTRASDK21NTMultiModalDirection")
@interface NTMultiModalDirection : NTResult
@end


/// A result of NTMultiModalTransportService.
SWIFT_CLASS("_TtC9NOSTRASDK18NTMultiModalResult")
@interface NTMultiModalResult : NTResult
@end


/// A route of multimodal transport.
SWIFT_CLASS("_TtC9NOSTRASDK17NTMultiModalRoute")
@interface NTMultiModalRoute : NTResult
@end


/// Instances of this class represent parameters for NTMultiModalTransportService. Parameters specify the criteria for performing a result of route. Parameters are passed as an argument to execute: or executeAsync:Completion on NTMultiModalTransportService.
SWIFT_CLASS("_TtC9NOSTRASDK29NTMultiModalTransportParamter")
@interface NTMultiModalTransportParamter : NTParameter
/// Initializes an NTMultiModalTransportParamter object.
///
/// returns:
/// A New NTMultiModalTransportParamter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The Multimodal Transport service allows you to find the best way to get from one location to another by public transportation systems in Thailand which is:
/// <ol>
///   <li>
///     Air Transport
///   </li>
///   <li>
///     Bus service by Transport Co., Ltd.
///   </li>
///   <li>
///     Bus service by BMTA
///   </li>
///   <li>
///     Bus Rapid Transit (BRT)
///   </li>
///   <li>
///     Mass Rapid Transit (MRT)
///   </li>
///   <li>
///     Bangkok Mass Transit System (BTS)
///   </li>
///   <li>
///     Airport Rail Link (ARL)
///   </li>
///   <li>
///     Railway
///   </li>
///   <li>
///     River and Canal Transport
///   </li>
/// </ol>
SWIFT_CLASS("_TtC9NOSTRASDK28NTMultiModalTransportService")
@interface NTMultiModalTransportService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTOpeningTime class is provided to describe open time of place.
SWIFT_CLASS("_TtC9NOSTRASDK13NTOpeningTime")
@interface NTOpeningTime : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// A NTPhoneNumberInfo class is provided to describe information of telephone.
SWIFT_CLASS("_TtC9NOSTRASDK17NTPhoneNumberInfo")
@interface NTPhoneNumberInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// Point
SWIFT_CLASS("_TtC9NOSTRASDK7NTPoint")
@interface NTPoint : NSObject
/// X coordinate
@property (nonatomic, readonly) double x;
/// Y coordinate
@property (nonatomic, readonly) double y;
/// latitude
@property (nonatomic, readonly) double latitude;
/// longitude
@property (nonatomic, readonly) double longitude;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// Initialize NTPoint Object.
/// \param x X coordinate
///
/// \param y Y coordinate
///
- (nonnull instancetype)initWithX:(double)x y:(double)y OBJC_DESIGNATED_INITIALIZER;
/// Initialize NTPoint Object.
/// \param latitude Latitude
///
/// \param longitude Longitude
///
- (nonnull instancetype)initWithLatitude:(double)latitude longitude:(double)longitude OBJC_DESIGNATED_INITIALIZER;
@end


/// Instances of this class represent parameters for NTRouteParameter, NTAgsRouteParameter.
SWIFT_CLASS("_TtC9NOSTRASDK14NTPointBarrier")
@interface NTPointBarrier : NTParameter
@end


/// Instances of this class represent parameters for NTRouteParameter, NTAgsRouteParameter.
SWIFT_CLASS("_TtC9NOSTRASDK16NTPolygonBarrier")
@interface NTPolygonBarrier : NTParameter
@end


/// Instances of this class represent parameters for NTRouteParameter, NTAgsRouteParameter.
SWIFT_CLASS("_TtC9NOSTRASDK17NTPolylineBarrier")
@interface NTPolylineBarrier : NTParameter
@end





/// Instances of this class represent parameters for NTRoadSnapService. Parameters specify the criteria for performing a weather. Parameters are passed as an argument to execute: or executeAsync:Completion on NTRoadSnapService.
SWIFT_CLASS("_TtC9NOSTRASDK19NTRoadSnapParameter")
@interface NTRoadSnapParameter : NTParameter
@end


/// A NTRoadSnapResult class.
SWIFT_CLASS("_TtC9NOSTRASDK16NTRoadSnapResult")
@interface NTRoadSnapResult : NTResult
@end


/// A set of result returns from NTSnapRoadService.
SWIFT_CLASS("_TtC9NOSTRASDK19NTRoadSnapResultSet")
@interface NTRoadSnapResultSet : NTResult
@end


/// The service provides convenience way for you to send the specified points to snap to roads in Thailand.
SWIFT_CLASS("_TtC9NOSTRASDK17NTRoadSnapService")
@interface NTRoadSnapService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTRouteBarrier class
SWIFT_CLASS("_TtC9NOSTRASDK14NTRouteBarrier")
@interface NTRouteBarrier : NTParameter
@end




/// The service allows you to find the best route to get from one location to another or the best way to visit several locations by car, truck, motorcycle, bicycle, or pedestrian. The locations can be specified by using coordinate of points. The best route can be determined for the order of locations as specified by the users. Along with the best route, service provides directions with turn-by-turn text guidance, travel time, and total distance.
/// In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
SWIFT_CLASS("_TtC9NOSTRASDK14NTRouteService")
@interface NTRouteService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// An NTRoutingPoint class.
SWIFT_CLASS("_TtC9NOSTRASDK14NTRoutingPoint")
@interface NTRoutingPoint : NTPoint
/// Intializes NTRoutingPoint object.
/// \param latitude Latitude
///
/// \param longitude Longitude
///
- (nonnull instancetype)initWithLatitude:(double)latitude longitude:(double)longitude SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithX:(double)x y:(double)y SWIFT_UNAVAILABLE;
@end


/// A class representing the NOSTRA SDK Environment.
SWIFT_CLASS("_TtC9NOSTRASDK16NTSDKEnvironment")
@interface NTSDKEnvironment : NSObject
/// This method provide for set SDK environment.
/// \param apiKey A NOSTRA API key.
///
+ (void)setAPIKey:(NSString * _Nonnull)apiKey;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9NOSTRASDK27NTSearchAlongRouteParameter")
@interface NTSearchAlongRouteParameter : NTParameter
@end


/// A result of location returns from NTSearchAlongRouteService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTSearchAlongRouteResult")
@interface NTSearchAlongRouteResult : NTLocationSearchResult
@end


/// A set of results returns from NTSearchAlongRouteService.
SWIFT_CLASS("_TtC9NOSTRASDK27NTSearchAlongRouteResultSet")
@interface NTSearchAlongRouteResultSet : NTResult
@end


/// This service allows you to search place information along your route, like gas station or restaurant, it has 2 options: closest and nearby, closest will search only route on heading street side while nearby will search both side.
SWIFT_CLASS("_TtC9NOSTRASDK25NTSearchAlongRouteService")
@interface NTSearchAlongRouteService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// A NTServiceAreaAttribute class.
SWIFT_CLASS("_TtC9NOSTRASDK22NTServiceAreaAttribute")
@interface NTServiceAreaAttribute : NTResult
@end



/// A result of NTServiceAreaService
SWIFT_CLASS("_TtC9NOSTRASDK19NTServiceAreaResult")
@interface NTServiceAreaResult : NTResult
@end


/// A set of result is returned from NTServiceAreaService
SWIFT_CLASS("_TtC9NOSTRASDK22NTServiceAreaResultSet")
@interface NTServiceAreaResultSet : NTResult
@end


/// This service allows you to find service areas around any location on a road network. For instance, the 30-minute service area for a facility includes all the streets that can be reached within 30 minutes from that facility. These areas are generally used to visualize and measure the ability of facility for serving users or customers. Once service areas are created, you can apply them for identifying how many areas, how many people, or how much of anything else is within that area.
/// In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
SWIFT_CLASS("_TtC9NOSTRASDK20NTServiceAreaService")
@interface NTServiceAreaService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Instances of this class represent parameters for NTShortLinkService. Parameters specify the criteria for performing a NOSTRA short link. Parameters are passed as an argument to execute: or executeAsync:Completion on NTShortLinkService.
SWIFT_CLASS("_TtC9NOSTRASDK20NTShortLinkParameter")
@interface NTShortLinkParameter : NTParameter
/// Initializes an NTShortLinkParameter object.
///
/// returns:
/// A New NTShortLinkParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A result of NTShortLinkService
SWIFT_CLASS("_TtC9NOSTRASDK17NTShortLinkResult")
@interface NTShortLinkResult : NTResult
@end


/// This service allows you to pin your geo-information on the NOSTRA Map website which is https://map.nostramap.com and NOSTRA Map Thailand for mobile.
SWIFT_CLASS("_TtC9NOSTRASDK18NTShortLinkService")
@interface NTShortLinkService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A spatial reference object.
SWIFT_CLASS("_TtC9NOSTRASDK18NTSpatialReference")
@interface NTSpatialReference : NTResult
/// A constant of WGS84
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger WGS84;)
+ (NSInteger)WGS84 SWIFT_WARN_UNUSED_RESULT;
/// A constant of Webmercator
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger WebMercator;)
+ (NSInteger)WebMercator SWIFT_WARN_UNUSED_RESULT;
/// The lastest WKID
@property (nonatomic, readonly) NSInteger lastestWkid;
/// WKID
@property (nonatomic, readonly) NSInteger wkid;
@end


/// Instances of this class represent parameters for NTStaticMapService. Parameters specify the criteria for performing a static map. Parameters are passed as an argument to execute: or executeAsync:Completion on NTStaticMapService.
SWIFT_CLASS("_TtC9NOSTRASDK20NTStaticMapParameter")
@interface NTStaticMapParameter : NTParameter
/// Initializes an NTStaticMapParameter object.
///
/// returns:
/// A new NTStaticMapParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A result of static map returns from NTStaticMapService.
SWIFT_CLASS("_TtC9NOSTRASDK17NTStaticMapResult")
@interface NTStaticMapResult : NTResult
@end


/// This service provides map as image PNG file with custom market (point of interest).
SWIFT_CLASS("_TtC9NOSTRASDK18NTStaticMapService")
@interface NTStaticMapService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A visiting point of interest.
SWIFT_CLASS("_TtC9NOSTRASDK6NTStop")
@interface NTStop : NTResult
@end


/// Instances of this class represent parameters for NTSumPOIService. Parameters specify the criteria for performing a poi summary. Parameters are passed as an argument to execute: or executeAsync:Completion on NTSumPOIService.
SWIFT_CLASS("_TtC9NOSTRASDK17NTSumPoiParameter")
@interface NTSumPoiParameter : NTParameter
@end


/// A result of summary.
SWIFT_CLASS("_TtC9NOSTRASDK14NTSumPoiResult")
@interface NTSumPoiResult : NTResult
@end


/// A set of result returns from NTSumPOIService.
SWIFT_CLASS("_TtC9NOSTRASDK17NTSumPoiResultSet")
@interface NTSumPoiResultSet : NTResult
@end


/// This service is a summary quantity of POI group by category or local category.
SWIFT_CLASS("_TtC9NOSTRASDK15NTSumPoiService")
@interface NTSumPoiService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTTemperature object.
SWIFT_CLASS("_TtC9NOSTRASDK13NTTemperature")
@interface NTTemperature : NTResult
@end


/// A NTTravelEntranceFee class provides to represent entrance fee of a place.
SWIFT_CLASS("_TtC9NOSTRASDK19NTTravelEntranceFee")
@interface NTTravelEntranceFee : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// A NTWeather object.
SWIFT_CLASS("_TtC9NOSTRASDK9NTWeather")
@interface NTWeather : NTResult
@end


/// Instances of this class represent parameters for NTWeatherService. Parameters specify the criteria for performing a weather. Parameters are passed as an argument to execute: or executeAsync:Completion on NTWeatherService.
SWIFT_CLASS("_TtC9NOSTRASDK18NTWeatherParameter")
@interface NTWeatherParameter : NTParameter
/// Initializes an NTWeatherParameter object.
///
/// returns:
/// A New NTWeatherParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A result of weather returns form NTWeather service.
SWIFT_CLASS("_TtC9NOSTRASDK15NTWeatherResult")
@interface NTWeatherResult : NTResult
@end


/// This services is the Weather Forecasting service by receiving the Date/Time and coordinate (Latitude/Longitude), then service will return the details of weather to user.
SWIFT_CLASS("_TtC9NOSTRASDK16NTWeatherService")
@interface NTWeatherService : NTService
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A NTWind object.
SWIFT_CLASS("_TtC9NOSTRASDK6NTWind")
@interface NTWind : NTResult
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
